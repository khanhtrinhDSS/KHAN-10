Feature: Creation of patient_account table from purgo_playground.pa_account source

  The system must create the target table purgo_playground.patient_account with the specified schema, data types, and column comments. The table must be dropped if it already exists. Data must be transformed and mapped according to the defined logic. All validation rules, error conditions, and business rules must be enforced.

  Background:
    Given the Unity Catalog is "purgo_databricks"
    And the schema is "purgo_playground"
    And the source table is "purgo_playground.pa_account"
    And the target table is "purgo_playground.patient_account"
    And the following columns and data types are required in patient_account:
      | Column                     | Data Type  | Nullable | Comment                                   |
      | patient_foundation_shipment| string     | No       | Patient foundation shipment identifier     |
      | prescriber_id              | string     | No       | Unique prescriber identifier               |
      | prescriber_key             | string     | No       | Prescriber key for internal mapping        |
      | patient_sf_id              | string     | No       | Salesforce patient ID                     |
      | service_request_type       | string     | No       | Type of service request                    |
      | case_sf_id                 | string     | No       | Salesforce case ID                         |
      | account_id                 | string     | No       | Account identifier                         |
      | hash_key                   | string     | No       | Hash key for record uniqueness             |
      | last_modified_date         | timestamp  | No       | Last modified timestamp                    |
      | planned_date               | date       | Yes      | Planned date for patient account           |
    And the following validation rules apply:
      | Column                     | Rule                                                                 |
      | patient_foundation_shipment| Must not be null or empty                                            |
      | prescriber_id              | Must not be null or empty; must match /^[A-Za-z0-9_-]{6,32}$/        |
      | prescriber_key             | Must not be null or empty; must be unique per prescriber_id          |
      | patient_sf_id              | Must not be null or empty; must match /^[A-Za-z0-9]{8,18}$/          |
      | service_request_type       | Must not be null or empty; must be one of [NEW, UPDATE, CLOSE]       |
      | case_sf_id                 | Must not be null or empty; must match /^[A-Za-z0-9]{8,18}$/          |
      | account_id                 | Must not be null or empty; must match /^[A-Za-z0-9]{8,18}$/          |
      | hash_key                   | Must not be null or empty; must be SHA256 of concatenated key fields |
      | last_modified_date         | Must not be null; must be valid timestamp                            |
      | planned_date               | If present, must be valid date (YYYY-MM-DD)                         |
    And the following error messages must be returned for invalid data:
      | Condition                                 | Error Message                                         |
      | Null or empty required field              | "Field <column> is required and cannot be null/empty" |
      | Invalid format for prescriber_id          | "Invalid prescriber_id format"                        |
      | Invalid format for patient_sf_id          | "Invalid patient_sf_id format"                        |
      | Invalid format for case_sf_id             | "Invalid case_sf_id format"                           |
      | Invalid format for account_id             | "Invalid account_id format"                           |
      | Invalid value for service_request_type    | "Invalid service_request_type value"                  |
      | Duplicate prescriber_key for prescriber_id| "Duplicate prescriber_key for prescriber_id"          |
      | Invalid timestamp for last_modified_date  | "Invalid last_modified_date format"                   |
      | Invalid date for planned_date             | "Invalid planned_date format"                         |

  Scenario: Drop patient_account table if it already exists
    Given the table "purgo_playground.patient_account" exists
    When the SQL to drop the table is executed
    Then the table "purgo_playground.patient_account" should not exist

  Scenario: Create patient_account table with correct schema and comments
    When the SQL to create the table "purgo_playground.patient_account" is executed
    Then the table "purgo_playground.patient_account" should exist
    And the table should have the following columns with correct data types and comments:
      | Column                     | Data Type  | Nullable | Comment                                   |
      | patient_foundation_shipment| string     | No       | Patient foundation shipment identifier     |
      | prescriber_id              | string     | No       | Unique prescriber identifier               |
      | prescriber_key             | string     | No       | Prescriber key for internal mapping        |
      | patient_sf_id              | string     | No       | Salesforce patient ID                     |
      | service_request_type       | string     | No       | Type of service request                    |
      | case_sf_id                 | string     | No       | Salesforce case ID                         |
      | account_id                 | string     | No       | Account identifier                         |
      | hash_key                   | string     | No       | Hash key for record uniqueness             |
      | last_modified_date         | timestamp  | No       | Last modified timestamp                    |
      | planned_date               | date       | Yes      | Planned date for patient account           |

  Scenario Outline: Insert valid data into patient_account table (happy path)
    Given the source table "purgo_playground.pa_account" contains a row with:
      | patient_foundation_shipment | prescriber_id | prescriber_key | patient_sf_id | service_request_type | case_sf_id | account_id | hash_key | last_modified_date      | planned_date  |
      | <patient_foundation_shipment> | <prescriber_id> | <prescriber_key> | <patient_sf_id> | <service_request_type> | <case_sf_id> | <account_id> | <hash_key> | <last_modified_date> | <planned_date> |
    When the SQL to insert the row into "purgo_playground.patient_account" is executed
    Then the row should be inserted successfully
    And all columns should match the expected values
    Examples:
      | patient_foundation_shipment | prescriber_id | prescriber_key | patient_sf_id | service_request_type | case_sf_id | account_id | hash_key | last_modified_date      | planned_date  |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    |
      | SHIP654321                  | PRSC1234      | KEY002         | PAT87654321   | UPDATE              | CASE123456 | ACC7654321 | 2c26b46b68ffc68ff99b453c1d30413413422f1640e1a2b8b2e6a2a1a1a1a1a1 | 2024-06-02T08:00:00Z |              |

  Scenario Outline: Insert invalid data into patient_account table (error scenarios)
    Given the source table "purgo_playground.pa_account" contains a row with:
      | patient_foundation_shipment | prescriber_id | prescriber_key | patient_sf_id | service_request_type | case_sf_id | account_id | hash_key | last_modified_date      | planned_date  |
      | <patient_foundation_shipment> | <prescriber_id> | <prescriber_key> | <patient_sf_id> | <service_request_type> | <case_sf_id> | <account_id> | <hash_key> | <last_modified_date> | <planned_date> |
    When the SQL to insert the row into "purgo_playground.patient_account" is executed
    Then the row should not be inserted
    And the error message "<error_message>" should be returned
    Examples:
      | patient_foundation_shipment | prescriber_id | prescriber_key | patient_sf_id | service_request_type | case_sf_id | account_id | hash_key | last_modified_date      | planned_date  | error_message                                         |
      |                            | PRSC7890      | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    | Field patient_foundation_shipment is required and cannot be null/empty |
      | SHIP123456                  | PRSC!@#       | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    | Invalid prescriber_id format                              |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT!@#        | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    | Invalid patient_sf_id format                             |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT12345678   | INVALID             | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    | Invalid service_request_type value                       |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC!@#     | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | 2024-06-15    | Invalid account_id format                                |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | not-a-timestamp       | 2024-06-15    | Invalid last_modified_date format                        |
      | SHIP123456                  | PRSC7890      | KEY001         | PAT12345678   | NEW                 | CASE876543 | ACC1234567 | 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08 | 2024-06-01T12:34:56Z | not-a-date     | Invalid planned_date format                              |

  Scenario: Enforce uniqueness of prescriber_key per prescriber_id
    Given the table "purgo_playground.patient_account" contains a row with prescriber_id "PRSC7890" and prescriber_key "KEY001"
    When a new row with prescriber_id "PRSC7890" and prescriber_key "KEY001" is inserted
    Then the row should not be inserted
    And the error message "Duplicate prescriber_key for prescriber_id" should be returned

  Scenario: Hash key generation for patient_account
    Given a row to be inserted with patient_foundation_shipment "SHIP123456", prescriber_id "PRSC7890", patient_sf_id "PAT12345678", account_id "ACC1234567"
    When the hash_key is generated
    Then the hash_key should be the SHA256 of the concatenated values "SHIP123456|PRSC7890|PAT12345678|ACC1234567"

  Scenario: Planned date is optional and must be valid if present
    Given a row to be inserted with planned_date "2024-06-15"
    When the SQL to insert the row is executed
    Then the row should be inserted successfully
    And planned_date should be stored as "2024-06-15"
    And if planned_date is not present, the column should be null

  Scenario: All required fields must be present and valid
    Given a row to be inserted with missing or invalid required fields
    When the SQL to insert the row is executed
    Then the row should not be inserted
    And the appropriate error message should be returned

  Scenario: All column comments must be present in the table definition
    When the SQL to create the table is executed
    Then each column in "purgo_playground.patient_account" should have the correct comment as specified

